{"version":3,"file":"static/js/86.2ba33a60.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Modal/Moadal.styled.js","components/Modal/Modal.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","redux/filter/selectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contact.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const filter = selectFilter(state);\n  const { items } = selectContacts(state);\n\n  let filteredContacts = items;\n  if (filter !== '') {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n  return filteredContacts;\n};\n\nexport const selectSortedContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    \n    return (contacts.items.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      ).sort((a, b) => a.name.localeCompare(b.name)));\n  }\n);","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-width:97%;\n  /* border: 1px solid #fff; */\n  /* border-radius: 4px; */\n  /* padding: 3px 5px; */\n  /* background-color: #226c8cbf; */\n\n  & input {\n    padding: 8px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 5px;\n  }\n\n  & label {\n    color: black;\n    font-weight: 200;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 12px;\n  }\n`;\n\n\n","import {useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport {StyledForm} from 'components/ContactForm/ContactForm.styled'\nimport { Button } from '@mui/material';\n\nconst INITIAL_STATE = {\n  name: '',\n  number:'',\n}\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n const [{name, number}, setState] = useState(INITIAL_STATE);\n \n\n\n  const handleInput = e => {\n    const {name, value} = e.target;\n    setState(prevState => ({...prevState, [name]: value}))\n  };\n\n\nconst handleSubmit = e => {\n  e.preventDefault();\n  const newContact = {\n    name,\n    number,\n  };\n  \n  if (contacts.items.find(contact => contact.name === newContact.name )) {\n    return Notiflix.Notify.failure(`${newContact.name} is already is contacts`);\n  }\n  dispatch(addContact(newContact));\n  resetForm();\n};\n\n\nconst resetForm =() => {\n  setState(INITIAL_STATE)\n}\n return (\n   <>\n     <StyledForm type=\"submit\" onSubmit={handleSubmit}>\n       <label>\n         Name\n         <input\n           type=\"text\"\n           onChange={handleInput}\n           value={name}\n           name=\"name\"\n           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n           required\n         />\n       </label>\n       <label>\n         Number\n         <input\n           type=\"tel\"\n           onChange={handleInput}\n           value={number}\n           name=\"number\"\n           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n           required\n         />\n       </label>\n       <Button type=\"submit\" variant=\"contained\">\n         Add contact\n       </Button>\n     </StyledForm>\n   </>\n );\n}\n\nexport default ContactForm;","import styled from \"styled-components\";\n\nexport const StyledModal = styled.div`\ndisplay: flex;\n`","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { StyledModal } from './Moadal.styled';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: '#3c9178',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function BasicModal() {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <StyledModal>\n      <Button\n        onClick={handleOpen}\n        variant=\"outlined\"\n        startIcon={<PersonAddIcon />}\n      >\n        Add Contact\n      </Button>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            align=\"center\"\n          >\n            Add Contact\n          </Typography>\n          <ContactForm />\n        </Box>\n      </Modal>\n    </StyledModal>\n  );\n}\n","import styled from \"styled-components\";\n\n\nexport const StyledContact = styled.li`\n  display: flex;\n  max-width: 50%;\n  justify-content: stretch;\n  align-items: center;\n  text-decoration: none;\n  & p {\n    display: flex;\n    align-self: center;\n    font-size: 18px;\n    margin: 10px auto;\n  }\n  & button {\n    margin-left: 15px;\n    align-self: center;\n  }\n`;\n\nexport const StyledContactInfo = styled.div`\n  display: flex;\n  max-width: 100%;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  max-width:100%;\n  & p {\n    margin-left: 5px;\n  }\n`;\n\n","// import Notiflix from \"notiflix\";\n// import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport {Button} from \"@mui/material\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport LocalPhoneIcon from '@mui/icons-material/LocalPhone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  StyledContact,\n  StyledContactInfo,\n} from './ContactItem.styled';\n\nexport const ContactItem = ({contact}) => {\nconst dispatch = useDispatch()\n\nconst handleDelete = (id) => {\n    dispatch(deleteContact(id));\n}\n\n    return (\n      <StyledContact>\n        <StyledContactInfo>\n          <PersonIcon color=\"primary\" fontSize=\"large\" />\n          <p>{contact.name}</p>\n          <LocalPhoneIcon color=\"primary\" fontSize=\"large\" />\n          <p>{contact.number}</p>\n        </StyledContactInfo>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          type=\"button\"\n          onClick={() => handleDelete(contact.id)}\n        >\n          <DeleteIcon />\n        </Button>\n      </StyledContact>\n    );\n}","import styled from \"styled-components\";\n\nexport const StyledList = styled.ul`\ndisplay: flex;\nflex-direction: column;\npadding: 5px;\n\n`","import {useSelector } from \"react-redux\";\nimport {ContactItem} from 'components/ContactItem/ContactItem'\nimport { selectSortedContacts } from 'redux/contacts/selectors';\nimport {StyledList} from 'components/ContactList/ContactList.styled'\n\nfunction ContactList () {\n    const filtered = useSelector(selectSortedContacts);\n\n    return (\n        <StyledList>\n            \n            {filtered.map(contact => {\n                return(\n                    <ContactItem key={contact.id} contact = {contact}/>\n                ) \n            })}\n        </StyledList>\n    )\n}\n\nexport default ContactList","export const selectContactsFilter = state => state.filter;\n","import styled from \"styled-components\";\n\nexport const FilterBlock = styled.div `\ndisplay:flex;\nflex-direction: row;\ngap: 20px;\nmargin-bottom: 10px;\n\n& p{\n    margin: 0;\n    font-size: 20px;\n}\n`","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsFilter } from 'redux/filter/selectors';\nimport { setContactFilter } from 'redux/filter/filterSlice';\nimport {FilterBlock} from 'components/Filter/Filter.styled'\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  return (\n    <FilterBlock>\n      <p>Find contacts</p>\n      <input\n        type=\"text\"\n        value={filter}\n        name={'name'}\n        onChange={e => dispatch(setContactFilter(e.currentTarget.value))}\n      />\n    </FilterBlock>\n  );\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nexport const ContactsContainer = styled.div`\ndisplay:flex;\nflex-direction:column;\n  max-width: 100%;\n  margin: 0 auto;\n\n  & button {\n    margin-bottom: 10px;\n  }\n`;","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport BasicModal from 'components/Modal/Modal';\n\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from 'components/Filter/Filter'\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading,selectError } from \"redux/contacts/selectors\";\nimport { ContactsContainer } from \"./Contact.styled\";\n\n\nconst Contacts = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n            dispatch(fetchContacts());\n    }, [dispatch])\n\n    return (\n      <HelmetProvider>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n          <ContactsContainer>\n            <h1>Contacts</h1>\n            <BasicModal />\n            <Filter />\n            {isLoading && <p>Loading...</p>}\n            {error && <p>{error}</p>}\n            <ContactList />\n          </ContactsContainer>\n      </HelmetProvider>\n    );\n}\nexport default Contacts"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectSortedContacts","createSelector","items","contact","name","toLowerCase","includes","sort","a","b","localeCompare","StyledForm","styled","INITIAL_STATE","number","dispatch","useDispatch","useSelector","useState","setState","handleInput","e","target","value","prevState","resetForm","type","onSubmit","preventDefault","newContact","find","Notiflix","addContact","onChange","pattern","title","required","Button","variant","StyledModal","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","BasicModal","React","open","setOpen","onClick","startIcon","PersonAdd","Modal","onClose","Box","sx","Typography","id","component","align","StyledContact","StyledContactInfo","ContactItem","Person","color","fontSize","LocalPhone","size","deleteContact","Delete","StyledList","filtered","map","selectContactsFilter","FilterBlock","setContactFilter","currentTarget","ContactsContainer","useEffect","fetchContacts"],"sourceRoot":""}